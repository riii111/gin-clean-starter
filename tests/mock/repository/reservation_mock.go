// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infra/repository/reservation.go
//
// Generated by this command:
//
//	mockgen -source=internal/infra/repository/reservation.go -destination=tests/mock/repository/reservation_mock.go -package=repositorymock
//

// Package repositorymock is a generated GoMock package.
package repositorymock

import (
	context "context"
	sqlc "gin-clean-starter/internal/infra/sqlc/generated"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockReservationWriteQueries is a mock of ReservationWriteQueries interface.
type MockReservationWriteQueries struct {
	ctrl     *gomock.Controller
	recorder *MockReservationWriteQueriesMockRecorder
	isgomock struct{}
}

// MockReservationWriteQueriesMockRecorder is the mock recorder for MockReservationWriteQueries.
type MockReservationWriteQueriesMockRecorder struct {
	mock *MockReservationWriteQueries
}

// NewMockReservationWriteQueries creates a new mock instance.
func NewMockReservationWriteQueries(ctrl *gomock.Controller) *MockReservationWriteQueries {
	mock := &MockReservationWriteQueries{ctrl: ctrl}
	mock.recorder = &MockReservationWriteQueriesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReservationWriteQueries) EXPECT() *MockReservationWriteQueriesMockRecorder {
	return m.recorder
}

// CreateReservation mocks base method.
func (m *MockReservationWriteQueries) CreateReservation(ctx context.Context, db sqlc.DBTX, arg sqlc.CreateReservationParams) (sqlc.Reservations, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReservation", ctx, db, arg)
	ret0, _ := ret[0].(sqlc.Reservations)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReservation indicates an expected call of CreateReservation.
func (mr *MockReservationWriteQueriesMockRecorder) CreateReservation(ctx, db, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReservation", reflect.TypeOf((*MockReservationWriteQueries)(nil).CreateReservation), ctx, db, arg)
}
