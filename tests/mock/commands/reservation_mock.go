// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/commands/reservation.go
//
// Generated by this command:
//
//	mockgen -source=internal/usecase/commands/reservation.go -destination=tests/mock/commands/reservation_mock.go -package=commandsmock
//

// Package commandsmock is a generated GoMock package.
package commandsmock

import (
	context "context"
	request "gin-clean-starter/internal/handler/dto/request"
	commands "gin-clean-starter/internal/usecase/commands"
	reflect "reflect"

	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockReservationCommands is a mock of ReservationCommands interface.
type MockReservationCommands struct {
	ctrl     *gomock.Controller
	recorder *MockReservationCommandsMockRecorder
	isgomock struct{}
}

// MockReservationCommandsMockRecorder is the mock recorder for MockReservationCommands.
type MockReservationCommandsMockRecorder struct {
	mock *MockReservationCommands
}

// NewMockReservationCommands creates a new mock instance.
func NewMockReservationCommands(ctrl *gomock.Controller) *MockReservationCommands {
	mock := &MockReservationCommands{ctrl: ctrl}
	mock.recorder = &MockReservationCommandsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReservationCommands) EXPECT() *MockReservationCommandsMockRecorder {
	return m.recorder
}

// CreateReservation mocks base method.
func (m *MockReservationCommands) CreateReservation(ctx context.Context, req request.CreateReservationRequest, userID, idempotencyKey uuid.UUID) (*commands.CreateReservationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReservation", ctx, req, userID, idempotencyKey)
	ret0, _ := ret[0].(*commands.CreateReservationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReservation indicates an expected call of CreateReservation.
func (mr *MockReservationCommandsMockRecorder) CreateReservation(ctx, req, userID, idempotencyKey any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReservation", reflect.TypeOf((*MockReservationCommands)(nil).CreateReservation), ctx, req, userID, idempotencyKey)
}
