services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    ports:
      - "15432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 3s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    # for hostname resolution with testcontainers
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DATABASE_URL: postgres://app:app@db:5432/app?sslmode=disable
      # testcontainers Docker-in-Docker configuration
      TESTCONTAINERS_HOST_OVERRIDE: host.docker.internal
    ports:
      - "8888:8888"
    volumes:
      - ./:/app:cached
      # Docker socket mount for testcontainers (development/testing only)
      - /var/run/docker.sock:/var/run/docker.sock

  db-migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://app:app@db:5432/app?sslmode=disable
    volumes:
      - ./sqlc.yaml:/app/sqlc.yaml
      - ./migrations:/app/migrations
      - ./internal/infra/queries:/app/internal/infra/queries
      - ./internal/infra/sqlc:/app/internal/infra/sqlc
    profiles:
      - migrate

volumes:
  pgdata:
